<!DOCTYPE html>
<html>
  <head>
    <title>AI Calender</title>
    <meta charset='utf-8' />
	<meta name="viewport" content="width=device-width, initial-scale=1.0">

	<link href="https://fonts.googleapis.com/css?family=Open+Sans" rel="stylesheet">
	<link href="/styles/style.css" rel="stylesheet">

  </head>
  <body>
  <div id="initialAnimation">
  	<h2>Log in with your Google account</h2>
    <!-- <button id="authorize-button" style="display: none;">
      <span class="icon"></span>
      <span class="buttonText">Sign in</span>
    </button> -->
    <div id="authorize-button" style="display: none;">
      <span class="icon"></span>
      <div id="label">Sign in</div>
    </div>
    <span class="shameless-plug">made by <a href="https://level30wizards.com" target="_blank" class="lvl30wzrds">Level30Wizards</a> for <span class="you">you</span></span>
  </div>
    <!--Add buttons to initiate auth sequence and sign out-->
    <!-- <button id="signout-button" style="display: none;">Sign Out</button> -->
	<!-- <button id="add-new">Add new item to calender</button> -->
	<!-- <button id="save-cal">Save calendar</button> -->

    <pre id="content"></pre>

	<%- include( 'calendar' ) %>


	<script async defer src="/moment.js"></script>
	<!-- <script async defer src="/scripts.js"></script> -->

	<script data-tween async defer src="https://cdnjs.cloudflare.com/ajax/libs/gsap/1.20.2/TweenMax.min.js"></script>

  <!-- <script async defer src="https://apis.google.com/js/api.js"
    onload="this.onload=function(){};handleClientLoad()"
    onreadystatechange="if (this.readyState === 'complete') this.onload()">
  </script> -->

  <script>
    const tween = document.querySelector( '[data-tween]' )
    tween.addEventListener( 'load', () => {

      const script = document.createElement( 'script' ),
        magic = document.createElement( 'script' ),
        g = document.createElement( 'script' )

      magic.setAttribute( 'src', '/magic.js' )
      script.setAttribute( 'src', '/scripts.js' )

      g.setAttribute( 'async', '' );
      g.setAttribute( 'defer', '' );
      g.setAttribute( 'src', 'https://apis.google.com/js/api.js' )
      // g.setAttribute( 'onload', 'this.onload=function(){};handleClientLoad()' );
        // g.setAttribute( 'onreadystatechange', `if (this.readyState === 'complete') this.onload()` );      

      script.addEventListener('load', () => {
        console.log('script loaded');
        // g.setAttribute( 'onload', 'this.onload=function(){};handleClientLoad()' );
        // g.setAttribute( 'onreadystatechange', `if (this.readyState === 'complete') this.onload()` );      

        // g.addEventListener( 'load', () => {
        //   console.log('g loaded');
        //   handleClientLoad()
        // })
      })

      g.onload = () => {
        this.onload = () => {
          handleClientLoad()
        };
        if (this.readyState === 'complete') this.onload()
      }

      // var gPromise = new Promise(function(resolve, reject) {
      //   // do a thing, possibly async, thenâ€¦
      //   if (g.readyState === 'complete') {
      //     resolve("Stuff worked!");
      //   }
      //   else {
      //     reject(Error("It broke"));
      //   }
      // })

      // g.addEventListener( 'readystatechange', function() {
      //   gPromise.then(function(result) {
      //     console.log(result); // "Stuff worked!"
      //     handleClientLoad();
      //   }, function(err) {
      //     console.log(err); // Error: "It broke"
      //   });
      // });

      document.body.appendChild( magic )
      document.body.appendChild( script )
      document.body.appendChild( g )

    })
  </script>
  </body>
</html>
